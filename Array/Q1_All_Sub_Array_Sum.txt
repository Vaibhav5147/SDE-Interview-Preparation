Q.1 Given an integer array ‘arr[]’ of size N, find the sum of all sub-arrays of the given array. 

Example :   1 , 2 , 3
Sub arrays    [1] , [1,2] , [1,2,3] , [2] , [2,3] , [3] 
Sum of all sub arrays : 20 


Approach 1 : Generate all sub array  and calculate sum
        findSum()
		{
			totalSum = 0;
			for(int i= 0;i<n;i++)
			{ 
			  currentSum = 0;
			  for(int j = i;j<n;j++)
			  {
			    currentSum += arr[j] ;
			    totalSum += currentSum ; 
              }			  
			}
		}
		

Time Complexity : O(N*N) , Space O(1)

Approach 2: Use Prefix Sum array to find the sub array sum 
         
		
		// Build Prefix Sum array
        		
		int prefixSumArr[N] = {0} ;
        void prefixSum()
		{   
		    prefixSumArr[0] = arr[0] ;
			for(int i=1;i<N;i++)
			{
				prefixSumArr[i] = prefixSumArr[i-1] + arr[i] ;
			}
		}	
       
	    // Use prefixSum array
		findSum()
		{   
		    totalSum = 0;
			for(int  i=0;i<N;i++)
			{   currentSum = 0;
				for(int j=i;j<N;j++)
				{
					if(i != 0)
						currentSum += prefixSumArr[j] - prefixSumArr[i-1]
				    else
						currentSum += prefixSumArr[j] ;
				    totalSum += currentSum ;		
				}
				
			}
		}
 
 
Time Complexity : O(N*N) , Space O(N) 	
	
Approach :3		Efficient Approach by observing  subsets and find the relation betweeen total number of elements (N) and index (i) .  
arr[] = [1, 2, 3], n = 3
All subarrays :  [1], [1, 2], [1, 2, 3], [2], [2, 3], [3]

There are following two types of subsets ,

subset 1 : element start with number  arr[i]
         eg . for arr[0]--> 1 :  [1] , [1,2] , [1,2,3]
                  arr[1]--> 2 :  [2] , [2,3]
                  arr[2]--> 3 :  [3]
               then number of times arr[i] appears in subset will be   (N-i)
subset 2 : element not start with number arr[i]
         eg . for arr[0]--> 1 : 0
                  arr[1]--> 2 : [1,2] , [1,2,3] 
                  arr[2]--> 3 : [2,3] [1,2,3] 
               then number of times arr[i] appears in subset will be (N-i)*i .

Then total count = (N-i) + (N-i)*i 
                 =  (N-i)(1+i)


				 
		//sudo code
		findSum()
		{
			totalSum = 0 ;
			for(int i=0;i<N;i++)
			totalSum += arr[i]*(N-i)*(1+i) ;
		}